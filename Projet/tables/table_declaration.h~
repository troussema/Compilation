/*-------------------------------------------------------------------------------
 *                                                                              *
 * Module contenant les fonctions pour gerer la table des declarations          *
 *                                                                              *
 * Auteur: SOLOFO RABONARIJAONA                                                 *
 *                                                                              *
 * Historique:                                                                  *
 *     - Creation le 03/11/17 par S.RABONARIJAONA                                                  *
 *                                                                              *
 *------------------------------------------------------------------------------*/


#ifndef TABLE_DECLARATION_H

#define TABLE_DECLARATION_H
#define TAILLE_TABLE_DECLARATION 50
#define OFFSET_DEBORDEMENT 25
#define LONGUEUR_LEXEME_MAX 100
#define FAUX 0
#define VRAI 1

enum Nature{
  TYPE_SIMPLE, 			/* les types simples : int bool float ... */
  TYPE_STRUCT,			
  TYPE_ARRAY,
  TYPE_VAR,
  TYPE_FUNC,
  TYPE_PROC
};

typedef struct {/* structure de la table des déclarations */
  int index;
  char lexeme[LONGUEUR_LEXEME_MAX];
  int nature;
  int suivant;
  int region;
  int description;
  int execution;
  int a_ete_insere;
}declaration;
typedef struct {
  char lexeme[LONGUEUR_LEXEME_MAX];
  int nature;
}declaration_aux;


/* déclaration des fonctions  */

/* =========== Insere un lexeme dans la table declaration auxiliaire ====== */
void inserer_aux(char lexeme[LONGUEUR_LEXEME_MAX], int nature);
/* =========== Insere une ligne dans la table ========== */
void inserer(char lexeme[LONGUEUR_LEXEME_MAX], int nature, int region, int description, int execution);
/* ============ modifier le champ suivant d'une declaration ============== */
void modifier_suivant(int index, int new_suivant);
/* ============= affiche la table à la sortie standard =============== */
void afficher_table();
/* =========== Initialise la table (insere les types simples) ======== */
void init_table();


/* --------------------  TABLE LEXICOGRAPHIQUE----------------------------- */

#define TAILLE_MAX 1000 

typedef struct
{
	int numlex;
	int longeur;
	char *contenue;
	int suiv;
} structlex;

/* déclaration des fonctions  */
void init_tab_hash();
int calcul_hash();
void remplissage_tab_hash();

void init_tab_lex();
void affichage_tab_lex();
void remplissage_tab_lex(char* ch,int n);

int existe_lex(char* ch);
char* effaceespace(char* ch);


#endif
